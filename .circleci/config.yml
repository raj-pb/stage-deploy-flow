# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

parameters:
  action:
    type: string
    default: "false"
    
orbs:
  slack: circleci/slack@4.9.3
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World! && ls infra/bin"
      - run:
          name: Provide template in bash env
          command: ls infra/slack-templates && echo 'export MY_ORB_TEMPLATE=$(cat infra/slack-templates/send_slack.json)' >> $BASH_ENV
      - run:
          name: Bump release candidates tags for release branches
          command: |
            pip install -q semver gitpython
            ./infra/bin/deploy_release_branch.sh
      - slack/notify:
          event: fail
          template: MY_ORB_TEMPLATE
      - slack/notify:
          event: pass
          template: MY_ORB_TEMPLATE

  say-bye:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.9
    steps:
      - add_ssh_keys:
          fingerprints:
            # github-murine-bot
            - "04:28:22:bd:ef:ff:70:82:02:e5:0f:d1:2c:6f:60:f7"
      - checkout
      - run:
          name: "Say Bye"
          command: "echo Bye, World! && ls infra/bin"
      - run:
          name: Provide template in bash env
          command: ls infra/slack-templates && echo 'export MY_ORB_TEMPLATE=$(cat infra/slack-templates/send_slack.json)' >> $BASH_ENV
      - run:
          name: Bump release candidates tags for release branches
          command: |
            echo << pipeline.parameters.action >>
            pip install -q semver gitpython
            ./infra/bin/deploy_release_branch.sh
      - slack/notify:
          event: fail
          template: MY_ORB_TEMPLATE
      - slack/notify:
          event: pass
          template: MY_ORB_TEMPLATE

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    when:
      equal: [ false, << pipeline.parameters.action >> ]
    jobs:
      - say-hello:
          context: 
            - slack-secrets

  pappa-workflow:
    when:
      equal: [ start_release, << pipeline.parameters.action >> ]
    jobs:
      - say-bye:
          context:
            -slack-secrets